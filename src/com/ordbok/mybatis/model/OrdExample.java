package com.ordbok.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class OrdExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public OrdExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andOrdIsNull() {
			addCriterion("ord is null");
			return (Criteria) this;
		}

		public Criteria andOrdIsNotNull() {
			addCriterion("ord is not null");
			return (Criteria) this;
		}

		public Criteria andOrdEqualTo(String value) {
			addCriterion("ord =", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdNotEqualTo(String value) {
			addCriterion("ord <>", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdGreaterThan(String value) {
			addCriterion("ord >", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdGreaterThanOrEqualTo(String value) {
			addCriterion("ord >=", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdLessThan(String value) {
			addCriterion("ord <", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdLessThanOrEqualTo(String value) {
			addCriterion("ord <=", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdLike(String value) {
			addCriterion("ord like", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdNotLike(String value) {
			addCriterion("ord not like", value, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdIn(List<String> values) {
			addCriterion("ord in", values, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdNotIn(List<String> values) {
			addCriterion("ord not in", values, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdBetween(String value1, String value2) {
			addCriterion("ord between", value1, value2, "ord");
			return (Criteria) this;
		}

		public Criteria andOrdNotBetween(String value1, String value2) {
			addCriterion("ord not between", value1, value2, "ord");
			return (Criteria) this;
		}

		public Criteria andPartofspeechIsNull() {
			addCriterion("partofspeech is null");
			return (Criteria) this;
		}

		public Criteria andPartofspeechIsNotNull() {
			addCriterion("partofspeech is not null");
			return (Criteria) this;
		}

		public Criteria andPartofspeechEqualTo(String value) {
			addCriterion("partofspeech =", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechNotEqualTo(String value) {
			addCriterion("partofspeech <>", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechGreaterThan(String value) {
			addCriterion("partofspeech >", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechGreaterThanOrEqualTo(String value) {
			addCriterion("partofspeech >=", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechLessThan(String value) {
			addCriterion("partofspeech <", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechLessThanOrEqualTo(String value) {
			addCriterion("partofspeech <=", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechLike(String value) {
			addCriterion("partofspeech like", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechNotLike(String value) {
			addCriterion("partofspeech not like", value, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechIn(List<String> values) {
			addCriterion("partofspeech in", values, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechNotIn(List<String> values) {
			addCriterion("partofspeech not in", values, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechBetween(String value1, String value2) {
			addCriterion("partofspeech between", value1, value2, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andPartofspeechNotBetween(String value1, String value2) {
			addCriterion("partofspeech not between", value1, value2, "partofspeech");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteIsNull() {
			addCriterion("singular_indefinite is null");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteIsNotNull() {
			addCriterion("singular_indefinite is not null");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteEqualTo(String value) {
			addCriterion("singular_indefinite =", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteNotEqualTo(String value) {
			addCriterion("singular_indefinite <>", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteGreaterThan(String value) {
			addCriterion("singular_indefinite >", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteGreaterThanOrEqualTo(String value) {
			addCriterion("singular_indefinite >=", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteLessThan(String value) {
			addCriterion("singular_indefinite <", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteLessThanOrEqualTo(String value) {
			addCriterion("singular_indefinite <=", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteLike(String value) {
			addCriterion("singular_indefinite like", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteNotLike(String value) {
			addCriterion("singular_indefinite not like", value, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteIn(List<String> values) {
			addCriterion("singular_indefinite in", values, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteNotIn(List<String> values) {
			addCriterion("singular_indefinite not in", values, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteBetween(String value1, String value2) {
			addCriterion("singular_indefinite between", value1, value2, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularIndefiniteNotBetween(String value1, String value2) {
			addCriterion("singular_indefinite not between", value1, value2, "singularIndefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteIsNull() {
			addCriterion("singular_definite is null");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteIsNotNull() {
			addCriterion("singular_definite is not null");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteEqualTo(String value) {
			addCriterion("singular_definite =", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteNotEqualTo(String value) {
			addCriterion("singular_definite <>", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteGreaterThan(String value) {
			addCriterion("singular_definite >", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteGreaterThanOrEqualTo(String value) {
			addCriterion("singular_definite >=", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteLessThan(String value) {
			addCriterion("singular_definite <", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteLessThanOrEqualTo(String value) {
			addCriterion("singular_definite <=", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteLike(String value) {
			addCriterion("singular_definite like", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteNotLike(String value) {
			addCriterion("singular_definite not like", value, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteIn(List<String> values) {
			addCriterion("singular_definite in", values, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteNotIn(List<String> values) {
			addCriterion("singular_definite not in", values, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteBetween(String value1, String value2) {
			addCriterion("singular_definite between", value1, value2, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andSingularDefiniteNotBetween(String value1, String value2) {
			addCriterion("singular_definite not between", value1, value2, "singularDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteIsNull() {
			addCriterion("plural_indefinite is null");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteIsNotNull() {
			addCriterion("plural_indefinite is not null");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteEqualTo(String value) {
			addCriterion("plural_indefinite =", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteNotEqualTo(String value) {
			addCriterion("plural_indefinite <>", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteGreaterThan(String value) {
			addCriterion("plural_indefinite >", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteGreaterThanOrEqualTo(String value) {
			addCriterion("plural_indefinite >=", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteLessThan(String value) {
			addCriterion("plural_indefinite <", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteLessThanOrEqualTo(String value) {
			addCriterion("plural_indefinite <=", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteLike(String value) {
			addCriterion("plural_indefinite like", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteNotLike(String value) {
			addCriterion("plural_indefinite not like", value, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteIn(List<String> values) {
			addCriterion("plural_indefinite in", values, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteNotIn(List<String> values) {
			addCriterion("plural_indefinite not in", values, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteBetween(String value1, String value2) {
			addCriterion("plural_indefinite between", value1, value2, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralIndefiniteNotBetween(String value1, String value2) {
			addCriterion("plural_indefinite not between", value1, value2, "pluralIndefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteIsNull() {
			addCriterion("plural_definite is null");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteIsNotNull() {
			addCriterion("plural_definite is not null");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteEqualTo(String value) {
			addCriterion("plural_definite =", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteNotEqualTo(String value) {
			addCriterion("plural_definite <>", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteGreaterThan(String value) {
			addCriterion("plural_definite >", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteGreaterThanOrEqualTo(String value) {
			addCriterion("plural_definite >=", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteLessThan(String value) {
			addCriterion("plural_definite <", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteLessThanOrEqualTo(String value) {
			addCriterion("plural_definite <=", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteLike(String value) {
			addCriterion("plural_definite like", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteNotLike(String value) {
			addCriterion("plural_definite not like", value, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteIn(List<String> values) {
			addCriterion("plural_definite in", values, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteNotIn(List<String> values) {
			addCriterion("plural_definite not in", values, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteBetween(String value1, String value2) {
			addCriterion("plural_definite between", value1, value2, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andPluralDefiniteNotBetween(String value1, String value2) {
			addCriterion("plural_definite not between", value1, value2, "pluralDefinite");
			return (Criteria) this;
		}

		public Criteria andImperativeIsNull() {
			addCriterion("imperative is null");
			return (Criteria) this;
		}

		public Criteria andImperativeIsNotNull() {
			addCriterion("imperative is not null");
			return (Criteria) this;
		}

		public Criteria andImperativeEqualTo(String value) {
			addCriterion("imperative =", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeNotEqualTo(String value) {
			addCriterion("imperative <>", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeGreaterThan(String value) {
			addCriterion("imperative >", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeGreaterThanOrEqualTo(String value) {
			addCriterion("imperative >=", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeLessThan(String value) {
			addCriterion("imperative <", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeLessThanOrEqualTo(String value) {
			addCriterion("imperative <=", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeLike(String value) {
			addCriterion("imperative like", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeNotLike(String value) {
			addCriterion("imperative not like", value, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeIn(List<String> values) {
			addCriterion("imperative in", values, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeNotIn(List<String> values) {
			addCriterion("imperative not in", values, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeBetween(String value1, String value2) {
			addCriterion("imperative between", value1, value2, "imperative");
			return (Criteria) this;
		}

		public Criteria andImperativeNotBetween(String value1, String value2) {
			addCriterion("imperative not between", value1, value2, "imperative");
			return (Criteria) this;
		}

		public Criteria andInfinitiveIsNull() {
			addCriterion("infinitive is null");
			return (Criteria) this;
		}

		public Criteria andInfinitiveIsNotNull() {
			addCriterion("infinitive is not null");
			return (Criteria) this;
		}

		public Criteria andInfinitiveEqualTo(String value) {
			addCriterion("infinitive =", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveNotEqualTo(String value) {
			addCriterion("infinitive <>", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveGreaterThan(String value) {
			addCriterion("infinitive >", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveGreaterThanOrEqualTo(String value) {
			addCriterion("infinitive >=", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveLessThan(String value) {
			addCriterion("infinitive <", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveLessThanOrEqualTo(String value) {
			addCriterion("infinitive <=", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveLike(String value) {
			addCriterion("infinitive like", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveNotLike(String value) {
			addCriterion("infinitive not like", value, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveIn(List<String> values) {
			addCriterion("infinitive in", values, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveNotIn(List<String> values) {
			addCriterion("infinitive not in", values, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveBetween(String value1, String value2) {
			addCriterion("infinitive between", value1, value2, "infinitive");
			return (Criteria) this;
		}

		public Criteria andInfinitiveNotBetween(String value1, String value2) {
			addCriterion("infinitive not between", value1, value2, "infinitive");
			return (Criteria) this;
		}

		public Criteria andPresentIsNull() {
			addCriterion("present is null");
			return (Criteria) this;
		}

		public Criteria andPresentIsNotNull() {
			addCriterion("present is not null");
			return (Criteria) this;
		}

		public Criteria andPresentEqualTo(String value) {
			addCriterion("present =", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentNotEqualTo(String value) {
			addCriterion("present <>", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentGreaterThan(String value) {
			addCriterion("present >", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentGreaterThanOrEqualTo(String value) {
			addCriterion("present >=", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentLessThan(String value) {
			addCriterion("present <", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentLessThanOrEqualTo(String value) {
			addCriterion("present <=", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentLike(String value) {
			addCriterion("present like", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentNotLike(String value) {
			addCriterion("present not like", value, "present");
			return (Criteria) this;
		}

		public Criteria andPresentIn(List<String> values) {
			addCriterion("present in", values, "present");
			return (Criteria) this;
		}

		public Criteria andPresentNotIn(List<String> values) {
			addCriterion("present not in", values, "present");
			return (Criteria) this;
		}

		public Criteria andPresentBetween(String value1, String value2) {
			addCriterion("present between", value1, value2, "present");
			return (Criteria) this;
		}

		public Criteria andPresentNotBetween(String value1, String value2) {
			addCriterion("present not between", value1, value2, "present");
			return (Criteria) this;
		}

		public Criteria andPastIsNull() {
			addCriterion("past is null");
			return (Criteria) this;
		}

		public Criteria andPastIsNotNull() {
			addCriterion("past is not null");
			return (Criteria) this;
		}

		public Criteria andPastEqualTo(String value) {
			addCriterion("past =", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastNotEqualTo(String value) {
			addCriterion("past <>", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastGreaterThan(String value) {
			addCriterion("past >", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastGreaterThanOrEqualTo(String value) {
			addCriterion("past >=", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastLessThan(String value) {
			addCriterion("past <", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastLessThanOrEqualTo(String value) {
			addCriterion("past <=", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastLike(String value) {
			addCriterion("past like", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastNotLike(String value) {
			addCriterion("past not like", value, "past");
			return (Criteria) this;
		}

		public Criteria andPastIn(List<String> values) {
			addCriterion("past in", values, "past");
			return (Criteria) this;
		}

		public Criteria andPastNotIn(List<String> values) {
			addCriterion("past not in", values, "past");
			return (Criteria) this;
		}

		public Criteria andPastBetween(String value1, String value2) {
			addCriterion("past between", value1, value2, "past");
			return (Criteria) this;
		}

		public Criteria andPastNotBetween(String value1, String value2) {
			addCriterion("past not between", value1, value2, "past");
			return (Criteria) this;
		}

		public Criteria andSupineIsNull() {
			addCriterion("supine is null");
			return (Criteria) this;
		}

		public Criteria andSupineIsNotNull() {
			addCriterion("supine is not null");
			return (Criteria) this;
		}

		public Criteria andSupineEqualTo(String value) {
			addCriterion("supine =", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineNotEqualTo(String value) {
			addCriterion("supine <>", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineGreaterThan(String value) {
			addCriterion("supine >", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineGreaterThanOrEqualTo(String value) {
			addCriterion("supine >=", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineLessThan(String value) {
			addCriterion("supine <", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineLessThanOrEqualTo(String value) {
			addCriterion("supine <=", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineLike(String value) {
			addCriterion("supine like", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineNotLike(String value) {
			addCriterion("supine not like", value, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineIn(List<String> values) {
			addCriterion("supine in", values, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineNotIn(List<String> values) {
			addCriterion("supine not in", values, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineBetween(String value1, String value2) {
			addCriterion("supine between", value1, value2, "supine");
			return (Criteria) this;
		}

		public Criteria andSupineNotBetween(String value1, String value2) {
			addCriterion("supine not between", value1, value2, "supine");
			return (Criteria) this;
		}

		public Criteria andPositiveIsNull() {
			addCriterion("positive is null");
			return (Criteria) this;
		}

		public Criteria andPositiveIsNotNull() {
			addCriterion("positive is not null");
			return (Criteria) this;
		}

		public Criteria andPositiveEqualTo(String value) {
			addCriterion("positive =", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveNotEqualTo(String value) {
			addCriterion("positive <>", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveGreaterThan(String value) {
			addCriterion("positive >", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveGreaterThanOrEqualTo(String value) {
			addCriterion("positive >=", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveLessThan(String value) {
			addCriterion("positive <", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveLessThanOrEqualTo(String value) {
			addCriterion("positive <=", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveLike(String value) {
			addCriterion("positive like", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveNotLike(String value) {
			addCriterion("positive not like", value, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveIn(List<String> values) {
			addCriterion("positive in", values, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveNotIn(List<String> values) {
			addCriterion("positive not in", values, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveBetween(String value1, String value2) {
			addCriterion("positive between", value1, value2, "positive");
			return (Criteria) this;
		}

		public Criteria andPositiveNotBetween(String value1, String value2) {
			addCriterion("positive not between", value1, value2, "positive");
			return (Criteria) this;
		}

		public Criteria andComparativeIsNull() {
			addCriterion("comparative is null");
			return (Criteria) this;
		}

		public Criteria andComparativeIsNotNull() {
			addCriterion("comparative is not null");
			return (Criteria) this;
		}

		public Criteria andComparativeEqualTo(String value) {
			addCriterion("comparative =", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeNotEqualTo(String value) {
			addCriterion("comparative <>", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeGreaterThan(String value) {
			addCriterion("comparative >", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeGreaterThanOrEqualTo(String value) {
			addCriterion("comparative >=", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeLessThan(String value) {
			addCriterion("comparative <", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeLessThanOrEqualTo(String value) {
			addCriterion("comparative <=", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeLike(String value) {
			addCriterion("comparative like", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeNotLike(String value) {
			addCriterion("comparative not like", value, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeIn(List<String> values) {
			addCriterion("comparative in", values, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeNotIn(List<String> values) {
			addCriterion("comparative not in", values, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeBetween(String value1, String value2) {
			addCriterion("comparative between", value1, value2, "comparative");
			return (Criteria) this;
		}

		public Criteria andComparativeNotBetween(String value1, String value2) {
			addCriterion("comparative not between", value1, value2, "comparative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeIsNull() {
			addCriterion("superlative is null");
			return (Criteria) this;
		}

		public Criteria andSuperlativeIsNotNull() {
			addCriterion("superlative is not null");
			return (Criteria) this;
		}

		public Criteria andSuperlativeEqualTo(String value) {
			addCriterion("superlative =", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeNotEqualTo(String value) {
			addCriterion("superlative <>", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeGreaterThan(String value) {
			addCriterion("superlative >", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeGreaterThanOrEqualTo(String value) {
			addCriterion("superlative >=", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeLessThan(String value) {
			addCriterion("superlative <", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeLessThanOrEqualTo(String value) {
			addCriterion("superlative <=", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeLike(String value) {
			addCriterion("superlative like", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeNotLike(String value) {
			addCriterion("superlative not like", value, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeIn(List<String> values) {
			addCriterion("superlative in", values, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeNotIn(List<String> values) {
			addCriterion("superlative not in", values, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeBetween(String value1, String value2) {
			addCriterion("superlative between", value1, value2, "superlative");
			return (Criteria) this;
		}

		public Criteria andSuperlativeNotBetween(String value1, String value2) {
			addCriterion("superlative not between", value1, value2, "superlative");
			return (Criteria) this;
		}

		public Criteria andMeaningIsNull() {
			addCriterion("meaning is null");
			return (Criteria) this;
		}

		public Criteria andMeaningIsNotNull() {
			addCriterion("meaning is not null");
			return (Criteria) this;
		}

		public Criteria andMeaningEqualTo(String value) {
			addCriterion("meaning =", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningNotEqualTo(String value) {
			addCriterion("meaning <>", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningGreaterThan(String value) {
			addCriterion("meaning >", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningGreaterThanOrEqualTo(String value) {
			addCriterion("meaning >=", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningLessThan(String value) {
			addCriterion("meaning <", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningLessThanOrEqualTo(String value) {
			addCriterion("meaning <=", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningLike(String value) {
			addCriterion("meaning like", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningNotLike(String value) {
			addCriterion("meaning not like", value, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningIn(List<String> values) {
			addCriterion("meaning in", values, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningNotIn(List<String> values) {
			addCriterion("meaning not in", values, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningBetween(String value1, String value2) {
			addCriterion("meaning between", value1, value2, "meaning");
			return (Criteria) this;
		}

		public Criteria andMeaningNotBetween(String value1, String value2) {
			addCriterion("meaning not between", value1, value2, "meaning");
			return (Criteria) this;
		}

		public Criteria andExampleIsNull() {
			addCriterion("example is null");
			return (Criteria) this;
		}

		public Criteria andExampleIsNotNull() {
			addCriterion("example is not null");
			return (Criteria) this;
		}

		public Criteria andExampleEqualTo(String value) {
			addCriterion("example =", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleNotEqualTo(String value) {
			addCriterion("example <>", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleGreaterThan(String value) {
			addCriterion("example >", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleGreaterThanOrEqualTo(String value) {
			addCriterion("example >=", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleLessThan(String value) {
			addCriterion("example <", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleLessThanOrEqualTo(String value) {
			addCriterion("example <=", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleLike(String value) {
			addCriterion("example like", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleNotLike(String value) {
			addCriterion("example not like", value, "example");
			return (Criteria) this;
		}

		public Criteria andExampleIn(List<String> values) {
			addCriterion("example in", values, "example");
			return (Criteria) this;
		}

		public Criteria andExampleNotIn(List<String> values) {
			addCriterion("example not in", values, "example");
			return (Criteria) this;
		}

		public Criteria andExampleBetween(String value1, String value2) {
			addCriterion("example between", value1, value2, "example");
			return (Criteria) this;
		}

		public Criteria andExampleNotBetween(String value1, String value2) {
			addCriterion("example not between", value1, value2, "example");
			return (Criteria) this;
		}

		public Criteria andPrefixIsNull() {
			addCriterion("prefix is null");
			return (Criteria) this;
		}

		public Criteria andPrefixIsNotNull() {
			addCriterion("prefix is not null");
			return (Criteria) this;
		}

		public Criteria andPrefixEqualTo(String value) {
			addCriterion("prefix =", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixNotEqualTo(String value) {
			addCriterion("prefix <>", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixGreaterThan(String value) {
			addCriterion("prefix >", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixGreaterThanOrEqualTo(String value) {
			addCriterion("prefix >=", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixLessThan(String value) {
			addCriterion("prefix <", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixLessThanOrEqualTo(String value) {
			addCriterion("prefix <=", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixLike(String value) {
			addCriterion("prefix like", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixNotLike(String value) {
			addCriterion("prefix not like", value, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixIn(List<String> values) {
			addCriterion("prefix in", values, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixNotIn(List<String> values) {
			addCriterion("prefix not in", values, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixBetween(String value1, String value2) {
			addCriterion("prefix between", value1, value2, "prefix");
			return (Criteria) this;
		}

		public Criteria andPrefixNotBetween(String value1, String value2) {
			addCriterion("prefix not between", value1, value2, "prefix");
			return (Criteria) this;
		}

		public Criteria andSuffixIsNull() {
			addCriterion("suffix is null");
			return (Criteria) this;
		}

		public Criteria andSuffixIsNotNull() {
			addCriterion("suffix is not null");
			return (Criteria) this;
		}

		public Criteria andSuffixEqualTo(String value) {
			addCriterion("suffix =", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixNotEqualTo(String value) {
			addCriterion("suffix <>", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixGreaterThan(String value) {
			addCriterion("suffix >", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixGreaterThanOrEqualTo(String value) {
			addCriterion("suffix >=", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixLessThan(String value) {
			addCriterion("suffix <", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixLessThanOrEqualTo(String value) {
			addCriterion("suffix <=", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixLike(String value) {
			addCriterion("suffix like", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixNotLike(String value) {
			addCriterion("suffix not like", value, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixIn(List<String> values) {
			addCriterion("suffix in", values, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixNotIn(List<String> values) {
			addCriterion("suffix not in", values, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixBetween(String value1, String value2) {
			addCriterion("suffix between", value1, value2, "suffix");
			return (Criteria) this;
		}

		public Criteria andSuffixNotBetween(String value1, String value2) {
			addCriterion("suffix not between", value1, value2, "suffix");
			return (Criteria) this;
		}

		public Criteria andCompoundIsNull() {
			addCriterion("compound is null");
			return (Criteria) this;
		}

		public Criteria andCompoundIsNotNull() {
			addCriterion("compound is not null");
			return (Criteria) this;
		}

		public Criteria andCompoundEqualTo(String value) {
			addCriterion("compound =", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundNotEqualTo(String value) {
			addCriterion("compound <>", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundGreaterThan(String value) {
			addCriterion("compound >", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundGreaterThanOrEqualTo(String value) {
			addCriterion("compound >=", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundLessThan(String value) {
			addCriterion("compound <", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundLessThanOrEqualTo(String value) {
			addCriterion("compound <=", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundLike(String value) {
			addCriterion("compound like", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundNotLike(String value) {
			addCriterion("compound not like", value, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundIn(List<String> values) {
			addCriterion("compound in", values, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundNotIn(List<String> values) {
			addCriterion("compound not in", values, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundBetween(String value1, String value2) {
			addCriterion("compound between", value1, value2, "compound");
			return (Criteria) this;
		}

		public Criteria andCompoundNotBetween(String value1, String value2) {
			addCriterion("compound not between", value1, value2, "compound");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNull() {
			addCriterion("category is null");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNotNull() {
			addCriterion("category is not null");
			return (Criteria) this;
		}

		public Criteria andCategoryEqualTo(String value) {
			addCriterion("category =", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotEqualTo(String value) {
			addCriterion("category <>", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThan(String value) {
			addCriterion("category >", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThanOrEqualTo(String value) {
			addCriterion("category >=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThan(String value) {
			addCriterion("category <", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThanOrEqualTo(String value) {
			addCriterion("category <=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLike(String value) {
			addCriterion("category like", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotLike(String value) {
			addCriterion("category not like", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryIn(List<String> values) {
			addCriterion("category in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotIn(List<String> values) {
			addCriterion("category not in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryBetween(String value1, String value2) {
			addCriterion("category between", value1, value2, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotBetween(String value1, String value2) {
			addCriterion("category not between", value1, value2, "category");
			return (Criteria) this;
		}

		public Criteria andRelatedwordIsNull() {
			addCriterion("relatedword is null");
			return (Criteria) this;
		}

		public Criteria andRelatedwordIsNotNull() {
			addCriterion("relatedword is not null");
			return (Criteria) this;
		}

		public Criteria andRelatedwordEqualTo(String value) {
			addCriterion("relatedword =", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordNotEqualTo(String value) {
			addCriterion("relatedword <>", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordGreaterThan(String value) {
			addCriterion("relatedword >", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordGreaterThanOrEqualTo(String value) {
			addCriterion("relatedword >=", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordLessThan(String value) {
			addCriterion("relatedword <", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordLessThanOrEqualTo(String value) {
			addCriterion("relatedword <=", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordLike(String value) {
			addCriterion("relatedword like", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordNotLike(String value) {
			addCriterion("relatedword not like", value, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordIn(List<String> values) {
			addCriterion("relatedword in", values, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordNotIn(List<String> values) {
			addCriterion("relatedword not in", values, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordBetween(String value1, String value2) {
			addCriterion("relatedword between", value1, value2, "relatedword");
			return (Criteria) this;
		}

		public Criteria andRelatedwordNotBetween(String value1, String value2) {
			addCriterion("relatedword not between", value1, value2, "relatedword");
			return (Criteria) this;
		}

		public Criteria andSynonymIsNull() {
			addCriterion("synonym is null");
			return (Criteria) this;
		}

		public Criteria andSynonymIsNotNull() {
			addCriterion("synonym is not null");
			return (Criteria) this;
		}

		public Criteria andSynonymEqualTo(String value) {
			addCriterion("synonym =", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymNotEqualTo(String value) {
			addCriterion("synonym <>", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymGreaterThan(String value) {
			addCriterion("synonym >", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymGreaterThanOrEqualTo(String value) {
			addCriterion("synonym >=", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymLessThan(String value) {
			addCriterion("synonym <", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymLessThanOrEqualTo(String value) {
			addCriterion("synonym <=", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymLike(String value) {
			addCriterion("synonym like", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymNotLike(String value) {
			addCriterion("synonym not like", value, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymIn(List<String> values) {
			addCriterion("synonym in", values, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymNotIn(List<String> values) {
			addCriterion("synonym not in", values, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymBetween(String value1, String value2) {
			addCriterion("synonym between", value1, value2, "synonym");
			return (Criteria) this;
		}

		public Criteria andSynonymNotBetween(String value1, String value2) {
			addCriterion("synonym not between", value1, value2, "synonym");
			return (Criteria) this;
		}

		public Criteria andAntonymIsNull() {
			addCriterion("antonym is null");
			return (Criteria) this;
		}

		public Criteria andAntonymIsNotNull() {
			addCriterion("antonym is not null");
			return (Criteria) this;
		}

		public Criteria andAntonymEqualTo(String value) {
			addCriterion("antonym =", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymNotEqualTo(String value) {
			addCriterion("antonym <>", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymGreaterThan(String value) {
			addCriterion("antonym >", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymGreaterThanOrEqualTo(String value) {
			addCriterion("antonym >=", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymLessThan(String value) {
			addCriterion("antonym <", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymLessThanOrEqualTo(String value) {
			addCriterion("antonym <=", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymLike(String value) {
			addCriterion("antonym like", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymNotLike(String value) {
			addCriterion("antonym not like", value, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymIn(List<String> values) {
			addCriterion("antonym in", values, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymNotIn(List<String> values) {
			addCriterion("antonym not in", values, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymBetween(String value1, String value2) {
			addCriterion("antonym between", value1, value2, "antonym");
			return (Criteria) this;
		}

		public Criteria andAntonymNotBetween(String value1, String value2) {
			addCriterion("antonym not between", value1, value2, "antonym");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNull() {
			addCriterion("created_date is null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIsNotNull() {
			addCriterion("created_date is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedDateEqualTo(Date value) {
			addCriterionForJDBCDate("created_date =", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("created_date <>", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThan(Date value) {
			addCriterionForJDBCDate("created_date >", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("created_date >=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThan(Date value) {
			addCriterionForJDBCDate("created_date <", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("created_date <=", value, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateIn(List<Date> values) {
			addCriterionForJDBCDate("created_date in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("created_date not in", values, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("created_date between", value1, value2, "createdDate");
			return (Criteria) this;
		}

		public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("created_date not between", value1, value2, "createdDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ord
	 * @mbg.generated  Wed Mar 13 13:00:02 HKT 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ord
     *
     * @mbg.generated do_not_delete_during_merge Tue Mar 12 00:15:30 HKT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}